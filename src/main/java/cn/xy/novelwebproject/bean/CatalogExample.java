package cn.xy.novelwebproject.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CatalogExample {
		/**
		 * This field was generated by MyBatis Generator.
		 * This field corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		protected String orderByClause;

		/**
		 * This field was generated by MyBatis Generator.
		 * This field corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		protected boolean distinct;

		/**
		 * This field was generated by MyBatis Generator.
		 * This field corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		protected List<Criteria> oredCriteria;

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public CatalogExample () {
				oredCriteria = new ArrayList<Criteria>();
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public void setOrderByClause (String orderByClause) {
				this.orderByClause = orderByClause;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public String getOrderByClause () {
				return orderByClause;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public void setDistinct (boolean distinct) {
				this.distinct = distinct;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public boolean isDistinct () {
				return distinct;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public List<Criteria> getOredCriteria () {
				return oredCriteria;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public void or (Criteria criteria) {
				oredCriteria.add(criteria);
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public Criteria or () {
				Criteria criteria = createCriteriaInternal();
				oredCriteria.add(criteria);
				return criteria;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public Criteria createCriteria () {
				Criteria criteria = createCriteriaInternal();
				if (oredCriteria.size() == 0) {
						oredCriteria.add(criteria);
				}
				return criteria;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		protected Criteria createCriteriaInternal () {
				Criteria criteria = new Criteria();
				return criteria;
		}

		/**
		 * This method was generated by MyBatis Generator.
		 * This method corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public void clear () {
				oredCriteria.clear();
				orderByClause = null;
				distinct = false;
		}

		/**
		 * This class was generated by MyBatis Generator.
		 * This class corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		protected abstract static class GeneratedCriteria {
				protected List<Criterion> criteria;

				protected GeneratedCriteria () {
						super();
						criteria = new ArrayList<Criterion>();
				}

				public boolean isValid () {
						return criteria.size() > 0;
				}

				public List<Criterion> getAllCriteria () {
						return criteria;
				}

				public List<Criterion> getCriteria () {
						return criteria;
				}

				protected void addCriterion (String condition) {
						if (condition == null) {
								throw new RuntimeException("Value for condition cannot be null");
						}
						criteria.add(new Criterion(condition));
				}

				protected void addCriterion (String condition, Object value, String property) {
						if (value == null) {
								throw new RuntimeException("Value for " + property + " cannot be null");
						}
						criteria.add(new Criterion(condition, value));
				}

				protected void addCriterion (String condition, Object value1, Object value2, String property) {
						if (value1 == null || value2 == null) {
								throw new RuntimeException("Between values for " + property + " cannot be null");
						}
						criteria.add(new Criterion(condition, value1, value2));
				}

				protected void addCriterionForJDBCDate (String condition, Date value, String property) {
						if (value == null) {
								throw new RuntimeException("Value for " + property + " cannot be null");
						}
						addCriterion(condition, new java.sql.Date(value.getTime()), property);
				}

				protected void addCriterionForJDBCDate (String condition, List<Date> values, String property) {
						if (values == null || values.size() == 0) {
								throw new RuntimeException("Value list for " + property + " cannot be null or empty");
						}
						List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
						Iterator<Date> iter = values.iterator();
						while (iter.hasNext()) {
								dateList.add(new java.sql.Date(iter.next().getTime()));
						}
						addCriterion(condition, dateList, property);
				}

				protected void addCriterionForJDBCDate (String condition, Date value1, Date value2, String property) {
						if (value1 == null || value2 == null) {
								throw new RuntimeException("Between values for " + property + " cannot be null");
						}
						addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
				}

				public Criteria andNovel_nameIsNull () {
						addCriterion("novel_name is null");
						return (Criteria) this;
				}

				public Criteria andNovel_nameIsNotNull () {
						addCriterion("novel_name is not null");
						return (Criteria) this;
				}

				public Criteria andNovel_nameEqualTo (String value) {
						addCriterion("novel_name =", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameNotEqualTo (String value) {
						addCriterion("novel_name <>", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameGreaterThan (String value) {
						addCriterion("novel_name >", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameGreaterThanOrEqualTo (String value) {
						addCriterion("novel_name >=", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameLessThan (String value) {
						addCriterion("novel_name <", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameLessThanOrEqualTo (String value) {
						addCriterion("novel_name <=", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameLike (String value) {
						addCriterion("novel_name like", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameNotLike (String value) {
						addCriterion("novel_name not like", value, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameIn (List<String> values) {
						addCriterion("novel_name in", values, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameNotIn (List<String> values) {
						addCriterion("novel_name not in", values, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameBetween (String value1, String value2) {
						addCriterion("novel_name between", value1, value2, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovel_nameNotBetween (String value1, String value2) {
						addCriterion("novel_name not between", value1, value2, "novel_name");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogIsNull () {
						addCriterion("novale_catalog is null");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogIsNotNull () {
						addCriterion("novale_catalog is not null");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogEqualTo (String value) {
						addCriterion("novale_catalog =", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogNotEqualTo (String value) {
						addCriterion("novale_catalog <>", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogGreaterThan (String value) {
						addCriterion("novale_catalog >", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogGreaterThanOrEqualTo (String value) {
						addCriterion("novale_catalog >=", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogLessThan (String value) {
						addCriterion("novale_catalog <", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogLessThanOrEqualTo (String value) {
						addCriterion("novale_catalog <=", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogLike (String value) {
						addCriterion("novale_catalog like", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogNotLike (String value) {
						addCriterion("novale_catalog not like", value, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogIn (List<String> values) {
						addCriterion("novale_catalog in", values, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogNotIn (List<String> values) {
						addCriterion("novale_catalog not in", values, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogBetween (String value1, String value2) {
						addCriterion("novale_catalog between", value1, value2, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andNovale_catalogNotBetween (String value1, String value2) {
						addCriterion("novale_catalog not between", value1, value2, "novale_catalog");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeIsNull () {
						addCriterion("updatetime is null");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeIsNotNull () {
						addCriterion("updatetime is not null");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeEqualTo (Date value) {
						addCriterionForJDBCDate("updatetime =", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeNotEqualTo (Date value) {
						addCriterionForJDBCDate("updatetime <>", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeGreaterThan (Date value) {
						addCriterionForJDBCDate("updatetime >", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeGreaterThanOrEqualTo (Date value) {
						addCriterionForJDBCDate("updatetime >=", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeLessThan (Date value) {
						addCriterionForJDBCDate("updatetime <", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeLessThanOrEqualTo (Date value) {
						addCriterionForJDBCDate("updatetime <=", value, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeIn (List<Date> values) {
						addCriterionForJDBCDate("updatetime in", values, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeNotIn (List<Date> values) {
						addCriterionForJDBCDate("updatetime not in", values, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeBetween (Date value1, Date value2) {
						addCriterionForJDBCDate("updatetime between", value1, value2, "updatetime");
						return (Criteria) this;
				}

				public Criteria andUpdatetimeNotBetween (Date value1, Date value2) {
						addCriterionForJDBCDate("updatetime not between", value1, value2, "updatetime");
						return (Criteria) this;
				}
		}

		/**
		 * This class was generated by MyBatis Generator.
		 * This class corresponds to the database table catalog
		 *
		 * @mbg.generated do_not_delete_during_merge Sat Jun 06 19:29:15 CST 2020
		 */
		public static class Criteria extends GeneratedCriteria {

				protected Criteria () {
						super();
				}
		}

		/**
		 * This class was generated by MyBatis Generator.
		 * This class corresponds to the database table catalog
		 *
		 * @mbg.generated Sat Jun 06 19:29:15 CST 2020
		 */
		public static class Criterion {
				private String condition;

				private Object value;

				private Object secondValue;

				private boolean noValue;

				private boolean singleValue;

				private boolean betweenValue;

				private boolean listValue;

				private String typeHandler;

				public String getCondition () {
						return condition;
				}

				public Object getValue () {
						return value;
				}

				public Object getSecondValue () {
						return secondValue;
				}

				public boolean isNoValue () {
						return noValue;
				}

				public boolean isSingleValue () {
						return singleValue;
				}

				public boolean isBetweenValue () {
						return betweenValue;
				}

				public boolean isListValue () {
						return listValue;
				}

				public String getTypeHandler () {
						return typeHandler;
				}

				protected Criterion (String condition) {
						super();
						this.condition = condition;
						this.typeHandler = null;
						this.noValue = true;
				}

				protected Criterion (String condition, Object value, String typeHandler) {
						super();
						this.condition = condition;
						this.value = value;
						this.typeHandler = typeHandler;
						if (value instanceof List<?>) {
								this.listValue = true;
						} else {
								this.singleValue = true;
						}
				}

				protected Criterion (String condition, Object value) {
						this(condition, value, null);
				}

				protected Criterion (String condition, Object value, Object secondValue, String typeHandler) {
						super();
						this.condition = condition;
						this.value = value;
						this.secondValue = secondValue;
						this.typeHandler = typeHandler;
						this.betweenValue = true;
				}

				protected Criterion (String condition, Object value, Object secondValue) {
						this(condition, value, secondValue, null);
				}
		}
}